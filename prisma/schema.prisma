// Prisma schema for NeonDB (PostgreSQL)

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


generator client {
  provider = "prisma-client-js"
}

enum TransactionType {
  INCOME
  EXPENSE
}

model User {
  id              Int              @id @default(autoincrement())
  email           String           @unique
  password        String
  name            String?
  createdAt       DateTime         @default(now())
  transactions    Transaction[]
  categories      Category[]
  monthlyBalances MonthlyBalance[]
}

model Transaction {
  id          Int             @id @default(autoincrement())
  amount      Float
  type        TransactionType
  description String?
  date        DateTime        @default(now())

  // Relasi ke User
  userId      Int
  user        User            @relation(fields: [userId], references: [id])

  // Relasi ke Category
  categoryId  Int
  category    Category        @relation(fields: [categoryId], references: [id])

  @@index([userId])
  @@index([categoryId])
  @@index([date])
}

model Category {
  id       Int             @id @default(autoincrement())
  name     String
  type     TransactionType

  // Relasi ke User
  userId   Int
  user     User            @relation(fields: [userId], references: [id])

  transactions Transaction[]
  @@index([userId])
}

model MonthlyBalance {
  id             Int      @id @default(autoincrement())
  month          DateTime // lebih baik DateTime daripada String
  initialBalance Float
  currentBalance Float
  totalIncome    Float
  totalExpense   Float

  // Relasi ke User
  userId         Int
  user           User     @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([month])
}
